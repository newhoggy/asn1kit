/* This file was generated by asn1gen */

package moo.meta

import org.asn1gen.runtime.{meta => _meta_}

object ASNEXAMPLES {

  trait Books extends _meta_.AsnList {
    override def name: String = "Books"

    override def children: Map[String, _meta_.AsnMember] = Map.empty
  }

  object Books extends Books
  trait BookPrice extends _meta_.AsnSequence {
    override def name: String = "BookPrice"

    override def children: Map[String, _meta_.AsnMember] = Map(
      "isbn" -> _meta_.AsnSequenceMember("isbn", _meta_.AsnOctetString, false),
      "price" -> _meta_.AsnSequenceMember("price", _meta_.AsnInteger, false))
  }

  object BookPrice extends BookPrice
  trait BookPrices extends _meta_.AsnList {
    override def name: String = "BookPrices"

    override def children: Map[String, _meta_.AsnMember] = Map.empty
  }

  object BookPrices extends BookPrices
  trait BookCover extends _meta_.AsnEnumeration {
  override def name: String = "BookCover"
  }

  object BookCover extends BookCover
  trait Book extends _meta_.AsnSequence {
    override def name: String = "Book"

    override def children: Map[String, _meta_.AsnMember] = Map(
      "isbn" -> _meta_.AsnSequenceMember("isbn", _meta_.AsnOctetString, false),
      "title" -> _meta_.AsnSequenceMember("title", _meta_.AsnOctetString, false),
      "author" -> _meta_.AsnSequenceMember("author", _meta_.AsnOctetString, false),
      "cover" -> _meta_.AsnSequenceMember("cover", BookCover, false),
      "isInPrint" -> _meta_.AsnSequenceMember("isInPrint", _meta_.AsnBoolean, false))
  }

  object Book extends Book
  trait Journals extends _meta_.AsnList {
    override def name: String = "Journals"

    override def children: Map[String, _meta_.AsnMember] = Map.empty
  }

  object Journals extends Journals
  trait Item extends _meta_.AsnChoice {
    override def name: String = "Item"

    override def children: Map[String, _meta_.AsnMember] = Map(
      "book" -> _meta_.AsnChoiceMember("book", Book),
      "journal" -> _meta_.AsnChoiceMember("journal", Journal))
  }

  object Item extends Item
  trait Journal extends _meta_.AsnSequence {
    override def name: String = "Journal"

    override def children: Map[String, _meta_.AsnMember] = Map(
      "title" -> _meta_.AsnSequenceMember("title", _meta_.AsnOctetString, false),
      "edition" -> _meta_.AsnSequenceMember("edition", _meta_.AsnOctetString, false))
  }

  object Journal extends Journal
  trait Items extends _meta_.AsnList {
    override def name: String = "Items"

    override def children: Map[String, _meta_.AsnMember] = Map.empty
  }

  object Items extends Items
}
