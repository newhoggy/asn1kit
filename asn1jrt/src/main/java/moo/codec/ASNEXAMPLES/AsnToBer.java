/* This file was generated by asn1gen */

package moo.codec.ASNEXAMPLES;

import org.asn1gen.runtime.java.*;

import static org.asn1gen.runtime.java.Statics.*;

import moo.model.ASNEXAMPLES.*;
import static moo.codec.ASNEXAMPLES.AsnToBerShadow.*;

@SuppressWarnings("unused")
public class AsnToBer {

  public static BerWriter encodePart(final Books value) throws AsnException {
    return encodePart_(value);
  }

  public static BerWriter encode(final Books value) throws AsnException {
    return encode_(value);
  }

  public static BerWriter encodePart(final BookPrice value) throws AsnException {
    return encodePart_(value);
  }

  public static BerWriter encode(final BookPrice value) throws AsnException {
    return encode_(value);
  }

  public static BerWriter encodePart(final BookPrices value) throws AsnException {
    return encodePart_(value);
  }

  public static BerWriter encode(final BookPrices value) throws AsnException {
    return encode_(value);
  }

  public static BerWriter encodePart(final BookCover value) throws AsnException {
    return encodePart_(value);
  }

  public static BerWriter encode(final BookCover value) throws AsnException {
    return encode_(value);
  }

  public static BerWriter encodePart(final Book value) throws AsnException {
    return encodePart_(value);
  }

  public static BerWriter encode(final Book value) throws AsnException {
    return encode_(value);
  }

  public static BerWriter encodePart(final Journals value) throws AsnException {
    return encodePart_(value);
  }

  public static BerWriter encode(final Journals value) throws AsnException {
    return encode_(value);
  }

  public static BerWriter encodePart(final Item value) throws AsnException {
    return encodePart_(value);
  }

  public static BerWriter encode(final Item value) throws AsnException {
    return encode_(value);
  }

  public static BerWriter encodePart(final Journal value) throws AsnException {
    return encodePart_(value);
  }

  public static BerWriter encode(final Journal value) throws AsnException {
    return encode_(value);
  }

  public static BerWriter encodePart(final Items value) throws AsnException {
    return encodePart_(value);
  }

  public static BerWriter encode(final Items value) throws AsnException {
    return encode_(value);
  }
}
